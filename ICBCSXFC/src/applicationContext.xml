<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	
	<util:properties id="jdbc" location="classpath:jdbc.properties"/>
	<util:properties id="configs" location="classpath:config.properties"/>
	
	<!-- 配置GTCG、日志路径等参数 -->
	<bean id="config" 
	      class="com.xkxx.entity.Config">
	      <property name="hostIp" value='#{configs.hostIp}' />
	      <property name="hostPort" value='#{configs.hostPort}' />
	      <property name="timeOut" value='#{configs.timeOut}' />
	      <property name="logDir" value='#{configs.logDir}' />
	      <property name="serverIp" value='#{configs.serverIp}' />
	      <property name="serverPort" value='#{configs.serverPort}' />
	      <property name="msgUser" value='#{configs.msgUser}' />
	      <property name="msgPasswd" value='#{configs.msgPasswd}' />
	</bean>
	
	<!-- 定义数据源 -->
	<bean id="ds" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="#{jdbc.url}"/>
		<property name="driverClassName" value="#{jdbc.driver}"/>
		<property name="username" value="#{jdbc.user}"/>
		<property name="password" value="#{jdbc.password}"/>
		<!-- 初始化连接池大小 -->
		<property name="initialSize" value="#{jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="#{jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="#{jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="#{jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="#{jdbc.maxWait}"></property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="ds" />
      <property name="mapperLocations" value="classpath:com/xkxx/entity/*.xml"/>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.xkxx.dao" />
       <property name="annotationClass" 
           value="com.xkxx.annotation.MyBatisRepository"/>
	</bean>
	
	<!-- 配置定时任务 
	<bean id="Job89005"
		class="org.springframework.scheduling.">
	
	</bean>
	
	-->
	<context:component-scan base-package="com.xkxx" />
	<!--<bean id="Job89005" class="com.xkxx.quartz.Job89005"></bean>
	<task:scheduled-tasks>
		<task:scheduled ref="Job89005" method="doJob2" cron="*/5 * * * * ?"/>
	</task:scheduled-tasks>
	-->
	<!-- 支持MVC注解 -->
	<mvc:annotation-driven />

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 注册拦截器 -->
	<!--<mvc:interceptors>
		 登录检查拦截器  
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login/toLogin.do"/>
			<mvc:exclude-mapping path="/login/login.do"/>
			<mvc:exclude-mapping path="/login/toSearchOne.do"/>
			<mvc:exclude-mapping path="/login/searchOne.do"/>
			<mvc:exclude-mapping path="/login/createImage.do"/>
			<mvc:exclude-mapping path="/login/toRegister.do"/>
			<mvc:exclude-mapping path="/login/register.do"/>
			<mvc:exclude-mapping path="/login/searchDevid.do"/>
			<mvc:exclude-mapping path="/login/toComputePay.do"/>
			<mvc:exclude-mapping path="/login/toNetPay.do"/>
			<bean class="com.xkxx.interceptor.LoginInterceptor"/>
		</mvc:interceptor>
		
		 判断当前模块拦截器 
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.xkxx.interceptor.CurrentModuleInterceptor"/>
		</mvc:interceptor>
		 权限检查拦截器 
		
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login/*"/>
			<bean class="com.xkxx.interceptor.CheckModuleInterceptor"/>
		</mvc:interceptor>
		
	</mvc:interceptors>
	
	--><!-- 开启AOP注解扫描 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 处理异常 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
	        <props>
	             <prop key="java.lang.Exception">main/error</prop>
	        </props>
	    </property>
	</bean>
	
	<!-- 声明式事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="to*" read-only="true" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="within(com.xkxx.controller..*)" />
	</aop:config>
	
</beans>